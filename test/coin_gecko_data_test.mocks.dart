// Mocks generated by Mockito 5.0.16 from annotations
// in rising_star_crypto_app/test/coin_gecko_data_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rising_star_crypto_app/services/coin_gecko_service.dart' as _i3;
import 'package:rising_star_crypto_app/services/http_service.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeHttpService_0 extends _i1.Fake implements _i2.HttpService {}

/// A class which mocks [CoinGeckoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinGeckoService extends _i1.Mock implements _i3.CoinGeckoService {
  MockCoinGeckoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpService get httpService =>
      (super.noSuchMethod(Invocation.getter(#httpService),
          returnValue: _FakeHttpService_0()) as _i2.HttpService);
  @override
  _i4.Future<Map<String, dynamic>> getMarketChartRange(
          {String? coin,
          String? vsCurrency,
          int? unixTimeFrom,
          int? unixTimeTo}) =>
      (super.noSuchMethod(
              Invocation.method(#getMarketChartRange, [], {
                #coin: coin,
                #vsCurrency: vsCurrency,
                #unixTimeFrom: unixTimeFrom,
                #unixTimeTo: unixTimeTo
              }),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i4.Future<Map<String, dynamic>>);
  @override
  String toString() => super.toString();
}
